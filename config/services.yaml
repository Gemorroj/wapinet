# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'ru'
    wapinet_title: 'WEB мастерская wapinet.ru'
    wapinet_contact_email: '%env(CONTACT_EMAIL)%'
    wapinet_robot_email: '%env(ROBOT_EMAIL)%'
    wapinet_ffmpeg_path: '%env(FFMPEG_PATH)%'
    wapinet_ffprobe_path: '%env(FFPROBE_PATH)%'
    wapinet_max_download_filesize: 50000000 # 50 mb
    wapinet_yandex_search_key: '%env(YANDEX_SEARCH_KEY)%'
    wapinet_threads_count: 3
    wapinet_geoip2_country_path: '%env(GEOIP2_COUNTRY_PATH)%'
    wapinet_forum_url: 'https://forum.wapinet.ru'
    wapinet_forum_database_name: forum
    wapinet_role_nocaptcha: ROLE_USER
    wapinet_paginate_maxperpage: 10
    wapinet_user_last_activity_delay: 60
    wapinet_php_path: '%env(PHP_PATH)%'
    wapinet_7z_path: '%env(P7Z_PATH)%'
    wapinet_archiver_comment: 'Wapinet.ru archiver'
    wapinet_video_screenshot_second: 5
    wapinet_email_footer: 'Сообщение отправлено через бесплатный сервис отправки E-mail https://wapinet.ru'
    wapinet_vk_access_token: '%env(VK_ACCESS_TOKEN)%'

    sphinx_port: 9312
    sphinx_host: 127.0.0.1

    router.request_context.host: wapinet.ru # для определения хоста в консольном режиме


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/Exception/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    pagerfanta.view.default:
        class: App\Pagerfanta\View
        tags:
            - { name: pagerfanta.view, alias: default }

    App\EventListener\OnlineListener:
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onCoreController }

    App\Uploader\Naming\FileDirectoryNamer:
        public: true

    App\EventListener\ListenerLastActivity:
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onCoreController }

    App\Service\File\Meta:
        $imagine: '@liip_imagine'
