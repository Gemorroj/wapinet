services:
  manticore:
    build:
      context: ./.docker/manticore
      dockerfile: Dockerfile
    container_name: wapinet-manticore
    restart: always
    ports:
      - "9306:9306" # mysql adapter
    environment:
      - CREATE_PLAIN_TABLES=1
    depends_on:
      - mysql
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
      memlock:
        soft: -1
        hard: -1
    volumes:
      - '.docker/manticore/manticore.conf:/etc/manticoresearch/manticore.conf'
      - '.docker/manticore/data:/var/lib/manticore'
  mysql:
    build:
      context: ./.docker/mysql
      dockerfile: Dockerfile
    command: [--innodb-use-native-aio=0, --skip-mysqlx]
    container_name: wapinet-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_PASSWORD=passwoRt
      - MYSQL_USER=wapinet
      - MYSQL_DATABASE=wapinet
    volumes:
      - '.docker/mysql/data:/var/lib/mysql'
      - '.docker/mysql/server.cnf:/etc/mysql/my.cnf'

  php:
    build:
      context: ./.docker/php
      dockerfile: Dockerfile
    volumes:
      - '.:/var/www/app'
      - '.docker/php/php.ini:/usr/local/etc/php/php.ini'
      - '.docker/php/php-fpm.conf:/usr/local/etc/php-fpm.conf'
      - '.docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini'
    container_name: wapinet-php
    ports:
      - "9000:9000" # php-fpm
    depends_on:
      - mysql
    expose:
      - "9001" # xdebug

  messenger:
    build:
      context: ./.docker/php
    restart: unless-stopped
    command: php ./bin/console messenger:consume --all
    container_name: wapinet-messenger
    volumes:
      - '.:/var/www/app'
    depends_on:
      - php

  nginx:
    build:
      context: ./.docker/nginx
      dockerfile: Dockerfile
    volumes:
      - '.:/var/www/app'
      - '.docker/nginx/app.conf:/etc/nginx/conf.d/default.conf'
    ports:
      - "80:80"
    container_name: wapinet-nginx
    depends_on:
      - php
