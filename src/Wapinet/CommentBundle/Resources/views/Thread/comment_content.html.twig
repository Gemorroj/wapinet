{#

 This file is part of the FOSCommentBundle package.

 (c) FriendsOfSymfony <http://friendsofsymfony.github.com/>

 This source file is subject to the MIT license that is bundled
 with this source code in the file LICENSE.

#}

{% if comment is not fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) or fos_comment_can_delete_comment(comment) %}
<ul data-role="listview" data-inset="true">
{% block fos_comment_comment %}

    {% block fos_comment_comment_metas %}
        <li class="fos_comment_comment_metas" data-role="list-divider">
            {{ comment.createdAt|wapinet_datetime }}

            {# отключаем голосование, т.к. не работает
            {% block fos_comment_comment_metas_voting %}
                <span class="fos_comment_comment_voting" data-role="controlgroup" data-type="horizontal" data-mini="true">
                    <a href="#" class="fos_comment_comment_score no-link bar-button ui-btn-icon-left ui-icon-heart ui-mini ui-btn-inline ui-btn" id="fos_comment_score_{{ comment.id }}">{{ comment.score }}</a>
                    {% if fos_comment_can_vote(comment) %}
                        <a data-role="button" data-inline="true" href="#" data-url="{{ url("fos_comment_new_thread_comment_votes", {"id": comment.thread.id, "commentId": comment.id, "value": 1}) }}" class="fos_comment_comment_vote ui-alt-icon ui-nodisc-icon ui-mini" data-iconpos="notext" data-icon="plus">Голосовать за</a>
                        <a data-role="button" data-inline="true" href="#" data-url="{{ url("fos_comment_new_thread_comment_votes", {"id": comment.thread.id, "commentId": comment.id, "value": -1}) }}" class="fos_comment_comment_vote ui-alt-icon ui-nodisc-icon ui-mini" data-iconpos="notext" data-icon="minus">Голосовать против</a>
                    {% endif %}
                </span>
            {% endblock fos_comment_comment_metas_voting %} #}

            <span class="fos_comment_comment_metas">
                {% block fos_comment_comment_metas_edit %}
                    {% if fos_comment_can_edit_comment(comment) %}
                        <a href="#" data-container="#fos_comment_comment_body_{{ comment.id }}" data-url="{{ url("fos_comment_edit_thread_comment", {"id": comment.thread.id, "commentId": comment.id}) }}" class="ui-btn ui-shadow ui-corner-all ui-icon-edit ui-btn-icon-notext ui-mini ui-btn-inline fos_comment_comment_edit_show_form">Изменить</a>
                    {% endif %}
                {% endblock fos_comment_comment_metas_edit %}

                {% block fos_comment_comment_metas_delete %}
                    {% if fos_comment_can_delete_comment(comment) %}
                        {% if comment is fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) %}
                            {# undelete #}
                            <a href="#" data-url="{{ url("fos_comment_remove_thread_comment", {"id": comment.thread.id, "commentId": comment.id, "value": constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_VISIBLE') }) }}" class="ui-btn ui-shadow ui-corner-all ui-icon-back ui-btn-icon-notext ui-mini ui-btn-inline fos_comment_comment_remove">Восстановить</a>
                        {% else %}
                            {# delete #}
                            <a href="#" data-url="{{ url("fos_comment_remove_thread_comment", {"id": comment.thread.id, "commentId": comment.id, "value":  constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')}) }}" class="ui-btn ui-shadow ui-corner-all ui-icon-delete ui-btn-icon-notext ui-mini ui-btn-inline fos_comment_comment_remove">Удалить</a>
                        {% endif %}
                    {% endif %}
                {% endblock fos_comment_comment_metas_delete %}
            </span>
        </li>
    {% endblock fos_comment_comment_metas %}

    <li data-icon="false" id="fos_comment_{{ comment.id }}" class="fos_comment_comment_show fos_comment_comment_depth_{{ depth }}" {% if parent is defined and parent is not null %}data-parent="{{ parent.id }}"{% endif %}>

        <div id="fos_comment_comment_body_{{ comment.id }}" class="fos_comment_comment_body">
        {% block fos_comment_comment_body %}
            {% if comment is fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) %}
                {% trans from 'FOSCommentBundle' %}fos_comment_comment_deleted{% endtrans %}
            {% else %}
                <span class="fos_comment_comment_avatar">
                    {% if comment.author %}
                        <img src="{{ wapinet_user_get_avatar_url(comment.author) }}" alt="{{ comment.author }}" class="image-preview" />
                    {% else %}
                        <img src="{{ wapinet_user_get_avatar_url() }}" alt="Anonymous" class="image-preview" />
                    {% endif %}
                    {% if comment.author and comment.author.isOnline %}
                        <span class="avatar-online"></span>
                    {% endif %}
                </span>

                {% block fos_comment_comment_metas_authorline %}
                    <span class="fos_comment_comment_authorname">
                        {% if comment.author %}
                            <a class="bar-button ui-btn-icon-left ui-icon-user ui-mini ui-btn-inline ui-btn" href="{{ path('wapinet_user_profile', {'username': comment.authorName}) }}">{{ comment.authorName }}</a>
                        {% else %}
                            <a class="no-link bar-button ui-btn-icon-left ui-icon-user ui-mini ui-btn-inline ui-btn" href="#">{{ comment.authorName }}</a>
                        {% endif %}
                    </span>
                {% endblock fos_comment_comment_metas_authorline %}

                <div class="fos_comment_comment_text long-description">
                    {%- if comment is fos_comment_raw -%}
                        {{ comment.rawBody | raw }}
                    {%- else -%}
                        {{ comment.body | wapinet_bbcode_parse }}
                    {%- endif -%}
                </div>
            {% endif %}
        {% endblock fos_comment_comment_body %}
        </div>


        {% block fos_comment_comment_children %}

            {% if view is not same as('flat') %}
                {% if fos_comment_can_comment(comment) %}
                    <div class="fos_comment_comment_reply">
                        {% block fos_comment_comment_reply %}
                            <a href="#" data-url="{{ url('fos_comment_new_thread_comments', {"id": comment.thread.id}) }}" data-name="{{ comment.authorName }}" data-parent-id="{{ comment.id }}" class="ui-btn fos_comment_comment_reply_show_form">Ответить</a>
                        {% endblock fos_comment_comment_reply %}
                    </div>
                {% endif %}

                <div class="fos_comment_comment_replies">
                    {% if children is defined %}
                        {% include "FOSCommentBundle:Thread:comments.html.twig" with { "comments": children, "depth": depth + 1, "parent": comment, "view": view } %}
                    {% endif %}
                </div>
            {% elseif view is same as('flat') and children is defined %}
                {% include "FOSCommentBundle:Thread:comments.html.twig" with { "comments": children, "depth": depth + 1, "parent": comment, "view": view } %}
            {% endif %}

        {% endblock fos_comment_comment_children %}
    </li>
{% endblock fos_comment_comment %}
</ul>
{% endif %}